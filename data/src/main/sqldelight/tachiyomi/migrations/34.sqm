 -- Create SortedScanlators table --
 CREATE TABLE sorted_scanlators (
     manga_id INTEGER NOT NULL,
     scanlator TEXT NOT NULL,
     rank INTEGER NOT NULL,
     UNIQUE (manga_id, scanlator),
     FOREIGN KEY(manga_id) REFERENCES mangas (_id)
     ON DELETE CASCADE
 );

 CREATE INDEX sorted_scanlators_manga_id_index ON sorted_scanlators(manga_id);

 -- Add uniqueChapterCount and uniqueChapterReadCount as fields to libraryView
 DROP VIEW IF EXISTS libraryView;

 CREATE VIEW libraryView AS
 SELECT
     M.*,
     coalesce(sum(C.total), 0) AS totalCount,
     count(*) AS uniqueChapterCount,
     coalesce(sum(C.readCount), 0) AS readCount,
     coalesce(sum(C.chapterRead), 0) AS uniqueChapterReadCount,
     coalesce(max(C.latestUpload), 0) AS latestUpload,
     coalesce(max(C.fetchedAt), 0) AS chapterFetchedAt,
     coalesce(max(C.lastRead), 0) AS lastRead,
     coalesce(sum(C.bookmarkCount), 0) AS bookmarkCount,
     coalesce(MC.category_id, 0) AS category
 FROM mangas M
 LEFT JOIN(
     SELECT
         chapters.manga_id,
         count(*) AS total,
         sum(read) AS readCount,
         max(read) AS chapterRead,
         coalesce(max(chapters.date_upload), 0) AS latestUpload,
         coalesce(max(history.last_read), 0) AS lastRead,
         coalesce(max(chapters.date_fetch), 0) AS fetchedAt,
         sum(chapters.bookmark) AS bookmarkCount
     FROM chapters
     LEFT JOIN excluded_scanlators
     ON chapters.manga_id = excluded_scanlators.manga_id
     AND chapters.scanlator = excluded_scanlators.scanlator
     LEFT JOIN history
     ON chapters._id = history.chapter_id
     WHERE excluded_scanlators.scanlator IS NULL
     GROUP BY chapters.manga_id, chapters.chapter_number
 ) AS C
 ON M._id = C.manga_id
 LEFT JOIN mangas_categories AS MC
 ON MC.manga_id = M._id
 WHERE M.favorite = 1
 GROUP BY M._id;
